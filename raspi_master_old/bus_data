#!/usr/bin/python3.4
# -*-coding:utf-8 -*

import socket
import threading

HOST = '127.0.0.1'
PORT = 65432


class Server(threading.Thread):
    def __init__(self, host='127.0.0.1', port=65432):
        threading.Thread.__init__(self)
        self._host = host
        self._port = port
        self._not_done = True

    def stop(self):
        self._not_done = False

    def run(self):
        print('Start')
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
            s.bind((self._host, self._port))
            s.listen()
            conn, addr = s.accept()
            with conn:
                print('Connected by ', addr)
                while self._not_done:
                    data = conn.recv(1024)
                    if not data:
                        self._not_done = False
                        break
                    conn.sendall(data)



"""
edit_file = False
if edit_file:
	import os
	os.chdir("/home/pi/Documents/results")
	print ("File open at ",os.getcwd())
	my_file = open(time.strftime("%B_%d_%H_%M_%S") + "txt", 'w' )
	my_file.write("time(s)\tmpu6050\testimated_incl\tU_mot\tpos_way")


def fermer_pgrm(signal, frame):
    print("fermer proprement")
    try:
        import RPi.GPIO as GPIO
        GPIO.cleanup()
    except:
        pass

    myLoc.finish()
    myI2cDev.finish()
    # del myLoc
    # del myI2cDev

    if edit_file:
        my_file.close()
    time.sleep(0.1)
    sys.exit(0)


signal.signal(signal.SIGINT, fermer_pgrm)"""


# test du module
if __name__ == "__main__":
    MyServer = Server()

    from time import  time
    t0 = time()
    MyServer.start()

    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s2:
        s2.connect((HOST, PORT))
        for i in range(1, 10):
            s2.sendall(b'Thunderbird baby \n')
        data = s2.recv(1024)

        print('Client received ', repr(data), ' \t time: ', time()-t0)


# End bus_data

